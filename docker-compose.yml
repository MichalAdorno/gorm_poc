version: '3.4'
services:
    postgres:
        image: postgres
        container_name: postgres
        restart: always
        environment:
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "${POSTGRES_PORT}:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -h postgres -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./temp/:/var/lib/postgres/data/
        networks:
            - pocnet
    poc:
        image: poc
        # build:
        #     context: .
        #     dockerfile: Dockerfile 
        #     target: production
        container_name: poc
        environment: 
            - POC_PORT=${POC_PORT}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "${POC_PORT}:8080"
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "curl -f poc:${POC_PORT}/health || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
        depends_on: 
            - postgres
        networks:
            - pocnet
networks:
    pocnet: